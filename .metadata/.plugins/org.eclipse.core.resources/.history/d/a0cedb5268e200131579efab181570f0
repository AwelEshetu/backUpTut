package lili.oulu.fi;

import java.io.IOException;

import android.app.Activity;
import android.app.PendingIntent;
import android.content.BroadcastReceiver;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.pm.PackageManager;
import android.nfc.NfcAdapter;
import android.nfc.Tag;
import android.nfc.tech.Ndef;
import android.os.Bundle;
import android.os.Parcelable;
import android.util.Log;
import android.widget.Toast;

public class TagReader extends Activity {

	public static final int STATE_OFF = 1;
	public static final int STATE_TURNING_ON = 2;
	public static final int STATE_ON = 3;
	public static final int STATE_TURNING_OFF = 4;

	public static final String Tag = TagWriter.class.getName();

	private NfcAdapter nfcAdapter;
	private IntentFilter[] writeTagFilter;
	private PendingIntent nfcPendingIntent;

	protected BroadcastReceiver nfcStateChangeBroadcastReceiver;

	protected boolean detecting = false;

	/** NXP chips support Mifare Classic, others do not. */
	protected boolean nxpMifareClassic;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_tag_reader);

		PackageManager pc = getPackageManager();

		if (pc.hasSystemFeature(PackageManager.FEATURE_NFC)
				&& NfcAdapter.getDefaultAdapter(this) != null) {
			Log.d(Tag, "Has Nfc sensor");
			initialize();

		} else {
			Log.d(Tag, "Has No Nfc sensor");
			Toast.makeText(this, "NFC not Found", Toast.LENGTH_SHORT).show();
		}

	}

	/**
	 * initialize 
	 */
	public void initialize() {
		nfcAdapter = NfcAdapter.getDefaultAdapter(this);
		IntentFilter tagDetected = new IntentFilter(
				NfcAdapter.ACTION_TAG_DISCOVERED);
		IntentFilter ndefDetected = new IntentFilter(
				NfcAdapter.ACTION_NDEF_DISCOVERED);
		 IntentFilter tecDetected = new IntentFilter(NfcAdapter.ACTION_TAG_DISCOVERED);

		nfcPendingIntent = PendingIntent.getActivity(this, 0, new Intent(this,
				getClass()).addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP), 0);

		writeTagFilter = new IntentFilter[] { tagDetected,ndefDetected,tecDetected};

	}

	@Override
	protected void onResume() {
		super.onResume();
		if (nfcAdapter != null) {
			nfcAdapter.enableForegroundDispatch(this, nfcPendingIntent,
					writeTagFilter, null);
		}
	}

	@Override
	protected void onPause() {
		super.onPause();
		if (nfcAdapter != null) {
			nfcAdapter.disableForegroundDispatch(this);
		}
	}
	
	
	/**
	 * call back function when NFC tag approach to the device 
	 */
	@Override
	protected void onNewIntent(Intent intent) {
		super.onNewIntent(intent);

		if (NfcAdapter.ACTION_TAG_DISCOVERED.equals(intent.getAction())) {
			Log.d("ACTION_TYPE", "ACTION_TAG_DISCOVERED");
			Parcelable[] parcelable = intent.getParcelableArrayExtra(NfcAdapter.ACTION_TAG_DISCOVERED);
			if (parcelable == null) {
				Log.d("Parcable", "null");

			} else {
				for (Parcelable p : parcelable) {
					Log.d("id Parcable", p.toString());
				}
			}
			Tag tag = intent.getParcelableExtra(NfcAdapter.EXTRA_TAG);
			System.out.println("TAG INFO .....");
			Log.d("Tag Id", tag.getId().toString());
			Log.d("Tag Class Name", tag.getId().toString());
			Log.d("Tag To String", tag.toString());
			

		}
		if(NfcAdapter.ACTION_NDEF_DISCOVERED.equals(intent.getAction())){
			Log.d("ACTION_TYPE", "ACTION_NDEF_DISCOVERED");
		}
		if(NfcAdapter.ACTION_TECH_DISCOVERED.equals(intent.getAction())){
			Log.d("ACTION_TYPE", "ACTION_TECH_DISCOVERED");
		}
	}
	
	/**
	 * get Tag info 
	 * @param tag
	 * @return
	 */
	public NfcTagInfo isWritable(Tag tag) {
		Ndef ndef = Ndef.get(tag);
		int size= ndef.getMaxSize();
		try {
			
			if (ndef.isWritable()) {
				ndef.close();
				return new NfcTagInfo("Writable", size);
			} 
			ndef.close();
			return new NfcTagInfo("Read Only", size);
			
		} catch (Exception e) {
			e.printStackTrace();
			return new NfcTagInfo("UnKnown", size);
		}

	}

	
	class NfcTagInfo{
		private String status;
		private int size;
		
		/**
		 * Tag Info 
		 * @param status
		 * @param size
		 */
		public NfcTagInfo(String status, int size) {
			super();
			this.status = status;
			this.size = size;
		}

		public String getStatus() {
			return status;
		}
	
		public int getSize() {
			return size;
		}
		
		
		
	}

}
